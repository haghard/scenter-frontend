# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.

play.crypto.secret="sdfg98sdf789dfhbioae8tyqiadjaosidug89qreu9ejbapodfjbpa9eruneapojfz"

# The application languages
# ~~~~~
play.i18n.langs = [ "en" ]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

#play.evolutions.enabled=false

play.db.pool=bonecp
#logger.scala.slick=DEBUG
logger.scala.slick.jdbc.JdbcBackend.statement=INFO

#db.url = "jdbc:h2:./db/accounts;DB_CLOSE_DELAY=-1"
#db.driver = "org.h2.Driver"


taxi {
  sliding-window = 3000
}

url {
  login = "http://.../api/login"
  pts-leaders = "http://.../api/leaders/pts/"
  reb-leaders = "http://.../api/leaders/reb/"
  daily-results = "http://.../api/daily/"
  twitter-login = "http://.../api/frontend-login-twitter"
  github-login = "http://..../api/frontend-login-github"
}

twitter {
  consumer_key = "...",
  consumer_secret = "..."
}

github {
  consumer_key = "...",
  consumer_secret = "..."
}


http-session {
  max-age = 1200
  header = SCENTER_FRONTEND_AUTH_SESSION_ID
  auth = "Authorization"
  auth-backend = "Set-Authorization"
}

cassandra {
  keyspace = "tripdata"
  port = 9042
  hosts = ["..."]
  query = "SELECT longitude, latitude, direction, month, day FROM green_tripdata WHERE year = ? and month = ? and direction = ?"
}

akka {

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel="DEBUG"

  stream.materializer.auto-fusing=off

  stream-dispatcher {
    type = Dispatcher
    executor = "fork-join-executor"
    fork-join-executor {
      parallelism-min = 8
      parallelism-max = 16
    }
  }

  blocking-dispatcher {
    executor = "thread-pool-executor"
    thread-pool-executor {
      core-pool-size-min = 4
      core-pool-size-max = 4
    }
  }

  akka.actor.default-dispatcher.fork-join-executor.parallelism-max = 4
  akka.actor.debug.receive = on
}


http.port = 8081
http.ip = 127.0.0.1
http.ip = ${?DOMAIN}

play.akka.actor-system = "SCenter-frontend"

io-timeout.message.pref="Service unavailable"
response-parse.message.pref="Response parse error"


stages: [
  { "season-12-13"  : "2012-10-28" }
  { "playoff-12-13" : "2013-04-19" }
  { "summer-12-13"  : "2013-06-20" }

  { "season-13-14"  : "2013-10-27" }
  { "playoff-13-14" : "2014-04-18" }
  { "summer-13-14"  : "2014-06-16" }

  { "season-14-15"  : "2014-10-27" }
  { "playoff-14-15" : "2015-04-16" }
  { "summer-14-15"  : "2015-06-20" }

  { "season-15-16"  : "2015-10-26" }
  { "playoff-15-16" : "2016-04-16" }
]